{
	"name": "Pipeline_IncementalCopy",
	"properties": {
		"activities": [
			{
				"name": "LookupOldWaterMarkActivity",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "WatermarkDataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LookupNewWaterMarkActivity",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select MAX(\"LastUpdateDate/Time\") as NewWatermarkvalue from customers",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "CustomerSource",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "IncrementalCopySource",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupOldWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupNewWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from Customers where [LastUpdateDate/Time] > '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}' and [LastUpdateDate/Time]<= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "CustomerSource",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "IncCopyCustomersTbl",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "StoredProceduretoWriteWatermarkActivity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IncrementalCopyTarget",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark]",
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlStage",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "IncrementalCopyTarget",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "IncrementalCopySource",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "DECLARE @OldWatermark AS DATETIME\nSET @OldWatermark  = '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}'\n\nDECLARE @NewWatermark AS DATETIME\nSET @NewWatermark  = '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'\n\nDECLARE @BirthDM AS INT\nSET @BirthDM = MONTH([DimensionFromDate])*100 + DAY([DimensionFromDate])\n\nDECLARE @OldWMDM AS INT\nSET @OldWMDM = MONTH(@OldWatermark)*100 + DAY(@OldWatermark)\n\nDECLARE @NewWMDM AS INT\nSET @NewWMDM = MONTH(@NewWatermark)*100 + DAY(@NewWatermark)\n\nselect * from dbo.DimCustomers where @BirthDM > @OldWMDM and @BirthDM <= @NewWMDM",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DimCustomerTbl",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "IncCopyTargetTbl",
						"type": "DatasetReference"
					}
				]
			}
		],
		"annotations": [],
		"lastPublishTime": "2021-05-02T05:35:22Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}